#!/usr/bin/env python3

OPCODE_ADD = 1
OPCODE_MULTIPLY = 2
OPCODE_HALT = 99


puzzle_intcode = [
    1, 0, 0, 3, 1, 1, 2, 3, 1, 3, 4, 3, 1, 5, 0, 3, 2, 1, 9, 19, 1, 19, 5, 23, 1, 13, 23, 27, 1, 27, 6, 31, 2, 31, 6, 35, 2, 6, 35, 39, 1, 39, 5, 43, 1, 13, 43, 47, 1, 6, 47, 51, 2, 13, 51, 55, 1, 10, 55, 59, 1, 59, 5, 63, 1, 10, 63, 67, 1, 67, 5, 71, 1, 71, 10, 75, 1, 9, 75, 79, 2, 13, 79, 83, 1, 9, 83, 87, 2, 87, 13, 91, 1, 10, 91, 95, 1, 95, 9, 99, 1, 13, 99, 103, 2, 103, 13, 107, 1, 107, 10, 111, 2, 10, 111, 115, 1, 115, 9, 119, 2, 119, 6, 123, 1, 5, 123, 127, 1, 5, 127, 131, 1, 10, 131, 135, 1, 135, 6, 139, 1, 10, 139, 143, 1, 143, 6, 147, 2, 147, 13, 151, 1, 5, 151, 155, 1, 155, 5, 159, 1, 159, 2, 163, 1, 163, 9, 0, 99, 2, 14, 0, 0
]


def process_intcode_segment(intcode, index):
    opcode = intcode[index]

    if opcode == OPCODE_HALT:
        return

    input_1_index = intcode[index + 1]
    input_2_index = intcode[index + 2]
    output_index = intcode[index + 3]

    if opcode == OPCODE_ADD:
        intcode[output_index] = intcode[input_1_index] + intcode[input_2_index]
    elif opcode == OPCODE_MULTIPLY:
        intcode[output_index] = intcode[input_1_index] * intcode[input_2_index]
    else:
        raise Exception('A very bad thing happened.')


def process_intcode(intcode):
    """
    >>> process_intcode([1, 0, 0, 0, 99])
    [2, 0, 0, 0, 99]
    >>> process_intcode([2, 3, 0, 3, 99])
    [2, 3, 0, 6, 99]
    >>> process_intcode([2, 4, 4, 5, 99, 0])
    [2, 4, 4, 5, 99, 9801]
    >>> process_intcode([1, 1, 1, 4, 99, 5, 6, 0, 99])
    [30, 1, 1, 4, 2, 5, 6, 0, 99]
    >>> process_intcode([1, 9, 10, 3, 2, 3, 11, 0, 99, 30, 40, 50])
    [3500, 9, 10, 70, 2, 3, 11, 0, 99, 30, 40, 50]
    >>> process_intcode([1, 12, 2, 3, 1, 1, 2, 3, 1, 3, 4, 3, 1, 5, 0, 3, 2, 1, 9, 19, 1, 19, 5, 23, 1, 13, 23, 27, 1, 27, 6, 31, 2, 31, 6, 35, 2, 6, 35, 39, 1, 39, 5, 43, 1, 13, 43, 47, 1, 6, 47, 51, 2, 13, 51, 55, 1, 10, 55, 59, 1, 59, 5, 63, 1, 10, 63, 67, 1, 67, 5, 71, 1, 71, 10, 75, 1, 9, 75, 79, 2, 13, 79, 83, 1, 9, 83, 87, 2, 87, 13, 91, 1, 10, 91, 95, 1, 95, 9, 99, 1, 13, 99, 103, 2, 103, 13, 107, 1, 107, 10, 111, 2, 10, 111, 115, 1, 115, 9, 119, 2, 119, 6, 123, 1, 5, 123, 127, 1, 5, 127, 131, 1, 10, 131, 135, 1, 135, 6, 139, 1, 10, 139, 143, 1, 143, 6, 147, 2, 147, 13, 151, 1, 5, 151, 155, 1, 155, 5, 159, 1, 159, 2, 163, 1, 163, 9, 0, 99, 2, 14, 0, 0])
    [4690667, 12, 2, 2, 1, 1, 2, 3, 1, 3, 4, 3, 1, 5, 0, 3, 2, 1, 9, 36, 1, 19, 5, 37, 1, 13, 23, 42, 1, 27, 6, 44, 2, 31, 6, 88, 2, 6, 35, 176, 1, 39, 5, 177, 1, 13, 43, 182, 1, 6, 47, 184, 2, 13, 51, 920, 1, 10, 55, 924, 1, 59, 5, 925, 1, 10, 63, 929, 1, 67, 5, 930, 1, 71, 10, 934, 1, 9, 75, 937, 2, 13, 79, 4685, 1, 9, 83, 4688, 2, 87, 13, 23440, 1, 10, 91, 23444, 1, 95, 9, 23447, 1, 13, 99, 23452, 2, 103, 13, 117260, 1, 107, 10, 117264, 2, 10, 111, 469056, 1, 115, 9, 469059, 2, 119, 6, 938118, 1, 5, 123, 938119, 1, 5, 127, 938120, 1, 10, 131, 938124, 1, 135, 6, 938126, 1, 10, 139, 938130, 1, 143, 6, 938132, 2, 147, 13, 4690660, 1, 5, 151, 4690661, 1, 155, 5, 4690662, 1, 159, 2, 4690664, 1, 163, 9, 0, 99, 2, 14, 0, 0]
    """
    intcode_copy = intcode.copy()

    for index in range(0, len(intcode_copy), 4):
        if intcode_copy[index] == OPCODE_HALT:
            break

        process_intcode_segment(intcode_copy, index)

    return intcode_copy


def main():
    puzzle_intcode[1] = 12
    puzzle_intcode[2] = 2
    puzzle_output = process_intcode(puzzle_intcode)
    print(puzzle_output[0])


if __name__ == '__main__':
    import doctest
    doctest.testmod()
    main()
